{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/homeworks/src/s2-homeworks/hw09/Clock.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SuperButton from '../hw04/common/c2-SuperButton/SuperButton';\nimport { restoreState } from '../hw06/localStorage/localStorage';\nimport s from './Clock.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Clock() {\n  _s();\n  const [timerId, setTimerId] = useState(undefined);\n  // for autotests // не менять // можно подсунуть в локалСторэдж нужную дату, чтоб увидеть как она отображается\n  const [date, setDate] = useState(new Date(restoreState('hw9-date', Date.now())));\n  const [show, setShow] = useState(false);\n  const start = () => {\n    // пишут студенты // запустить часы (должно отображаться реальное время, а не +1)\n    // сохранить ид таймера (https://learn.javascript.ru/settimeout-setinterval#setinterval)\n\n    const id = window.setInterval(() => {\n      setDate(new Date());\n    }, 1000);\n    setTimerId(id);\n  };\n  const stop = () => {\n    // пишут студенты // поставить часы на паузу, обнулить ид таймера (timerId <- undefined)\n    clearInterval(timerId);\n  };\n  const onMouseEnter = () => {\n    // пишут студенты // показать дату если наведена мышка\n    setShow(true);\n  };\n  const onMouseLeave = () => {\n    // пишут студенты // спрятать дату если мышка не наведена\n    setShow(false);\n  };\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  let seconds = date.getSeconds();\n  const stringTime = `${hours} : ${minutes} : ${seconds}` || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 64\n  }, this); // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n  const stringDate = `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}` || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 92\n  }, this); // день.месяц.год (01.02.2022) // пишут студенты, варианты 01.02.0123/01.02.-123/01.02.12345 не рассматриваем\n\n  // день недели на английском, месяц на английском (https://learn.javascript.ru/intl#intl-datetimeformat)\n  const stringDay = date.toLocaleString('en-US', {\n    weekday: 'long'\n  }) || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 74\n  }, this); // пишут студенты\n  const stringMonth = date.toLocaleString('en-US', {\n    month: 'long'\n  }) || /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 74\n  }, this); // пишут студенты\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.clock,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'hw9-watch',\n      className: s.watch,\n      onMouseEnter: onMouseEnter,\n      onMouseLeave: onMouseLeave,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        id: 'hw9-day',\n        children: stringDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n        id: 'hw9-time',\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: stringTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: 'hw9-more',\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.more,\n        children: show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw9-month',\n            children: stringMonth\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this), \",\", ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            id: 'hw9-date',\n            children: stringDate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.buttonsContainer,\n      children: [/*#__PURE__*/_jsxDEV(SuperButton, {\n        id: 'hw9-button-start',\n        onClick: start,\n        disabled: !timerId\n        // пишут студенты // задизэйблить если таймер запущен\n        ,\n        children: \"start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(SuperButton, {\n        id: 'hw9-button-stop',\n        disabled: !show\n        // disabled={true} // пишут студенты // задизэйблить если таймер не запущен\n        ,\n        onClick: stop,\n        children: \"stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Clock, \"ZwaHrVAN0WVEgtsrPs/UmiWhs0M=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useState","SuperButton","restoreState","s","Clock","timerId","setTimerId","undefined","date","setDate","Date","now","show","setShow","start","id","window","setInterval","stop","clearInterval","onMouseEnter","onMouseLeave","hours","getHours","minutes","getMinutes","seconds","getSeconds","stringTime","stringDate","getDate","getMonth","getFullYear","stringDay","toLocaleString","weekday","stringMonth","month","clock","watch","more","buttonsContainer"],"sources":["/Users/eduardanaida/Documents/GitHub/homeworks/src/s2-homeworks/hw09/Clock.tsx"],"sourcesContent":["import React, {useState} from 'react'\nimport SuperButton from '../hw04/common/c2-SuperButton/SuperButton'\nimport {restoreState} from '../hw06/localStorage/localStorage'\nimport s from './Clock.module.css'\n\nfunction Clock() {\n    const [timerId, setTimerId] = useState<number | undefined>(undefined)\n    // for autotests // не менять // можно подсунуть в локалСторэдж нужную дату, чтоб увидеть как она отображается\n    const [date, setDate] = useState<Date>(new Date(restoreState('hw9-date', Date.now())))\n    const [show, setShow] = useState<boolean>(false)\n\n    const start = () => {\n        // пишут студенты // запустить часы (должно отображаться реальное время, а не +1)\n        // сохранить ид таймера (https://learn.javascript.ru/settimeout-setinterval#setinterval)\n\n        const id: number = window.setInterval(() => {\n            setDate(new Date)\n        }, 1000)\n        setTimerId(id)\n\n    }\n\n    const stop = () => {\n        // пишут студенты // поставить часы на паузу, обнулить ид таймера (timerId <- undefined)\n        clearInterval(timerId)\n\n    }\n\n    const onMouseEnter = () => { // пишут студенты // показать дату если наведена мышка\n        setShow(true)\n    }\n    const onMouseLeave = () => { // пишут студенты // спрятать дату если мышка не наведена\n        setShow(false)\n    }\n    let hours = date.getHours()\n    let minutes = date.getMinutes()\n    let seconds = date.getSeconds()\n\n    const stringTime = `${hours} : ${minutes} : ${seconds}` || <br/> // часы24:минуты:секунды (01:02:03)/(23:02:03)/(24:00:00)/(00:00:01) // пишут студенты\n    const stringDate = `${date.getDate()}.${date.getMonth() + 1}.${date.getFullYear()}` || <br/> // день.месяц.год (01.02.2022) // пишут студенты, варианты 01.02.0123/01.02.-123/01.02.12345 не рассматриваем\n\n    // день недели на английском, месяц на английском (https://learn.javascript.ru/intl#intl-datetimeformat)\n    const stringDay = date.toLocaleString('en-US', {weekday: 'long'}) || <br/> // пишут студенты\n    const stringMonth = date.toLocaleString('en-US', {month: 'long'}) || <br/> // пишут студенты\n\n    return (\n        <div className={s.clock}>\n            <div\n                id={'hw9-watch'}\n                className={s.watch}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n            >\n                <span id={'hw9-day'}>{stringDay}</span>,{' '}\n                <span id={'hw9-time'}>\n                    <strong>{stringTime}</strong>\n                </span>\n            </div>\n\n            <div id={'hw9-more'}>\n                <div className={s.more}>\n                    {show ? (\n                        <>\n                            <span id={'hw9-month'}>{stringMonth}</span>,{' '}\n                            <span id={'hw9-date'}>{stringDate}</span>\n                        </>\n                    ) : (\n                        <>\n                            <br/>\n                        </>\n                    )}\n                </div>\n            </div>\n\n            <div className={s.buttonsContainer}>\n                <SuperButton\n                    id={'hw9-button-start'}\n                    onClick={start}\n                    disabled={!timerId}\n                     // пишут студенты // задизэйблить если таймер запущен\n\n                >\n                    start\n                </SuperButton>\n                <SuperButton\n                    id={'hw9-button-stop'}\n                    disabled={!show}\n                    // disabled={true} // пишут студенты // задизэйблить если таймер не запущен\n                    onClick={stop}\n                >\n                    stop\n                </SuperButton>\n            </div>\n        </div>\n    )\n}\n\nexport default Clock\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}