{"ast":null,"code":"const initState = {\n  themeId: 1\n};\nexport const themeReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // fix any\n  switch (action.type) {\n    case \"SET_THEME_ID\":\n      {\n        return {\n          ...state,\n          themeId: action.id\n        };\n      }\n    default:\n      return state;\n  }\n};\nexport const changeThemeId = id => ({\n  type: 'SET_THEME_ID',\n  id: id\n}); // fix any","map":{"version":3,"names":["initState","themeId","themeReducer","state","action","type","id","changeThemeId"],"sources":["/Users/eduardanaida/Documents/GitHub/homeworks/src/s2-homeworks/hw12/bll/themeReducer.ts"],"sourcesContent":["import store from \"../../hw10/bll/store\";\n\nconst initState = {\n    themeId: 1,\n}\n\n\nexport const themeReducer = (state = initState, action: ChangeThemeType): typeof initState => { // fix any\n    switch (action.type) {\n\n        case \"SET_THEME_ID\": {\n            return {\n                ...state,\n                themeId: action.id\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport const changeThemeId = (id: number) => ({type: 'SET_THEME_ID', id: id}) // fix any\n\nexport type ChangeThemeType = {\n    type: 'SET_THEME_ID',\n    id: number\n}\n\nexport type RootState = ReturnType<typeof store.getState>;"],"mappings":"AAEA,MAAMA,SAAS,GAAG;EACdC,OAAO,EAAE;AACb,CAAC;AAGD,OAAO,MAAMC,YAAY,GAAG,YAAkE;EAAA,IAAjEC,KAAK,uEAAGH,SAAS;EAAA,IAAEI,MAAuB;EAAyB;EAC5F,QAAQA,MAAM,CAACC,IAAI;IAEf,KAAK,cAAc;MAAE;QACjB,OAAO;UACH,GAAGF,KAAK;UACRF,OAAO,EAAEG,MAAM,CAACE;QACpB,CAAC;MACL;IACA;MACI,OAAOH,KAAK;EAAA;AAExB,CAAC;AAED,OAAO,MAAMI,aAAa,GAAID,EAAU,KAAM;EAACD,IAAI,EAAE,cAAc;EAAEC,EAAE,EAAEA;AAAE,CAAC,CAAC,EAAC"},"metadata":{},"sourceType":"module"}