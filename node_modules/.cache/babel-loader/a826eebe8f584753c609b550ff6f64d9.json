{"ast":null,"code":"var _jsxFileName = \"/Users/eduardanaida/Documents/GitHub/homeworks/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx\";\nimport React from 'react';\nimport s from './SuperButton.module.css'; // тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SuperButton = _ref => {\n  let {\n    xType,\n    className,\n    disabled,\n    red,\n    secondary,\n    ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n\n  } = _ref;\n  const finalClassName = s.button + (red ? s.red : s.default) + (disabled ? ' ' + s.disabled : s.default) + (secondary ? xType === 'secondary' : s.default) + (className ? ' ' + className : ''); // задачка на смешивание классов\n\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    disabled: disabled,\n    className: finalClassName,\n    ...restProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SuperButton;\nexport default SuperButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"SuperButton\");","map":{"version":3,"names":["React","s","SuperButton","xType","className","disabled","red","secondary","restProps","finalClassName","button","default"],"sources":["/Users/eduardanaida/Documents/GitHub/homeworks/src/s2-homeworks/hw04/common/c2-SuperButton/SuperButton.tsx"],"sourcesContent":["import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    xType?: string\n    red?: boolean\n    default?: boolean\n    secondary?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        xType,\n        className,\n        disabled,\n        red,\n        secondary,\n        ...restProps // все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = s.button\n        + (red ? s.red : s.default)\n        + (disabled ? ' ' + s.disabled : s.default)\n        + (secondary ? xType === 'secondary' : s.default)\n        + (className ? ' ' + className : '') // задачка на смешивание классов\n\n    return (\n        <button\n            disabled={disabled}\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n"],"mappings":";AAAA,OAAOA,KAAP,MAA6D,OAA7D;AACA,OAAOC,CAAP,MAAc,0BAAd,C,CAEA;;;;AAWA,MAAMC,WAA2C,GAAG,QAS/C;EAAA,IARD;IACIC,KADJ;IAEIC,SAFJ;IAGIC,QAHJ;IAIIC,GAJJ;IAKIC,SALJ;IAMI,GAAGC,SANP,CAMiB;;EANjB,CAQC;EACD,MAAMC,cAAc,GAAGR,CAAC,CAACS,MAAF,IAChBJ,GAAG,GAAGL,CAAC,CAACK,GAAL,GAAWL,CAAC,CAACU,OADA,KAEhBN,QAAQ,GAAG,MAAMJ,CAAC,CAACI,QAAX,GAAsBJ,CAAC,CAACU,OAFhB,KAGhBJ,SAAS,GAAGJ,KAAK,KAAK,WAAb,GAA2BF,CAAC,CAACU,OAHtB,KAIhBP,SAAS,GAAG,MAAMA,SAAT,GAAqB,EAJd,CAAvB,CADC,CAKwC;;EAEzC,oBACI;IACI,QAAQ,EAAEC,QADd;IAEI,SAAS,EAAEI,cAFf;IAAA,GAGQD;EAHR;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAvBD;;KAAMN,W;AAyBN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}